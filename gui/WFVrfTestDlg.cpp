/*******************************************************************
Autor:         Jinfeng Chen
E-mail:        jinfengcc@gmail.com
Date:          09-29-2015
Description:   Create a dialog for technicians for tracey machine alignment.
This Dialog will be generated by clicking 'camera alignment button inside the 'ctrl+q' interface.

*****************************************************************************************/

//***************************************************************************************


#include "StdAfx.h"
#include "Resource.h"


#include "WFVrfTestDlg.h"

//***************************************************************************************
//***************************************************************************************
//***************************************************************************************
//***************************************************************************************

BEGIN_MESSAGE_MAP(CWFVrfTestDlg, CDialog)

	ON_BN_CLICKED(ID_REWF_BTN, OnReExamBtnClicked)

END_MESSAGE_MAP()
//***************************************************************************************

CWFVrfTestDlg::CWFVrfTestDlg(CWnd* pParentWnd, CWFExam* pWFExam) : CDialog(IDD_WFVRFTEST_DLG, pParentWnd)
{
	m_pWFExam = pWFExam;

	m_hAccel = ::LoadAccelerators(::AfxGetInstanceHandle(), MAKEINTRESOURCE(IDR_ACCELERATOR));
}

//***************************************************************************************

void CWFVrfTestDlg::DoDataExchange(CDataExchange* pDX)
{
	CDialog::DoDataExchange(pDX);
	DDX_Control(pDX, ID_REWF_BTN, m_ReWfExamBtn);
	DDX_Control(pDX, IDCANCEL, m_CancelBtn);
}

//***************************************************************************************

BOOL CWFVrfTestDlg::OnInitDialog()
{
	CDialog::OnInitDialog();

	m_w = ::GetSystemMetrics(SM_CXSCREEN);
	m_h = ::GetSystemMetrics(SM_CYSCREEN);

	SetWindowPos(NULL, 0, 0, m_w, m_h, SWP_NOZORDER);

	real d = 0.005 * m_h;
	real BH = (m_h - 17 * d) / 16;

	int  BT = intRound(d);
	int  BB = intRound(d + (BH));

	RECT rect;
	::SetRect(&rect, intRound(0.915 * m_w), BT, intRound(0.995 * m_w), BB);
	m_ReWfExamBtn.MoveWindow(&rect, TRUE);

	BT = BB + intRound(d);
	BB = BT + intRound(BH);

	::SetRect(&rect, intRound(0.915 * m_w), BT, intRound(0.995 * m_w), BB);
	m_CancelBtn.MoveWindow(&rect, TRUE);

	CenterWindow();

	ShowVefWnd();

	return FALSE;
}

//***************************************************************************************

void CWFVrfTestDlg::ShowVefWnd()
{
	//CPatient NewPatient;

	RECT SumRect;
	::SetRect(&SumRect, 0, 0, intRound(0.915 * m_w), intRound(0.964 * m_h));

	m_pSumWnd = new CWFVrfTestWnd(this, SumRect, NULL, m_pWFExam, &::Settings.m_TSvrSettings[0]);
}

//***************************************************************************************

void CWFVrfTestDlg::OnReExamBtnClicked()
{
	delete m_pSumWnd;
	m_pSumWnd = NULL;

	CDialog::OnOK();
}

//***************************************************************************************

void CWFVrfTestDlg::OnCancel()
{
	delete m_pSumWnd;
	m_pSumWnd = NULL;

	CDialog::OnCancel();
}

//***************************************************************************************
//***************************************************************************************

BOOL CWFVrfTestDlg::PreTranslateMessage(MSG* pMsg)
{
	if (pMsg->message == WM_KEYDOWN)
	{

		CWnd* pWnd = NULL;

		// Ctrl + Y, Ctrl + Z;
		if (pMsg->wParam == 37)
		{
			m_pSumWnd->OnPrevButtonClicked();
		}
		else if (pMsg->wParam == 39)
		{
			m_pSumWnd->OnNextButtonClicked();
		}


		if (pWnd) {
			if (TranslateAccelerator(pWnd->m_hWnd, m_hAccel, pMsg)) return TRUE;
		}

	}

	return CWnd::PreTranslateMessage(pMsg);
}

//***************************************************************************************
